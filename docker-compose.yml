services:
  traefik:
    image: traefik:v3.1.5
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 6379:6379
      - 5432:5432
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config.yml:/etc/traefik/config.yml:ro
      - ./certs:/etc/certs:ro
    networks:
      - mired
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"


  ms_main_app:
    build:
      context: .
    environment:
      FLASK_ENV: development
      DATABASE_DEV_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_dev_db
      DATABASE_TEST_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_test_db
      DATABASE_PROD_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_prod_db
      MS_CATALOGO_URL: http://ms_catalogo:5000
      MS_STOCK_URL: http://ms_stock:5000
      MS_PAGO_URL: http://ms_pago:5000
      MS_COMPRAS_URL: http://ms_compras:5000
      REDIS_URL: redis://redis:6379
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms_main_app.rule=Host(`ecommerce.universidad.localhost`)"
      - "traefik.http.routers.ms_main_app.entrypoints=http,https"
      - "traefik.http.routers.ms_main_app.tls=true"
      - "traefik.http.routers.ms_main_app.middlewares=latency-check@file"
      - "traefik.http.services.ms_main_app.loadbalancer.server.port=8000"
      - "traefik.docker.network=mired"
    networks:
      - mired

  ms_catalogo:
    build:
      context: ../microservicio-catalogo # Ruta hacia el microservicio
    deploy:
      replicas: 2
    environment:
      FLASK_ENV: development
      DATABASE_DEV_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_dev_db
      DATABASE_TEST_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_test_db
      DATABASE_PROD_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_prod_db
      SQLALCHEMY_ENGINE_OPTIONS: |
        {"connect_args": {"options": "-csearch_path=catalogo_schema"}}
      REDIS_URL: redis://redis:6379
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms_catalogo.tls=true"
      - "traefik.http.routers.ms_catalogo.middlewares=latency-check@file"
      - "traefik.http.services.ms_catalogo.loadbalancer.server.port=8000"
      - "traefik.docker.network=mired"
    networks:
      - mired
  
  ms_stock:
    build:
      context: ../ms-inventarios # Ruta hacia el microservicio
    deploy:
      replicas: 2
    environment:
      FLASK_ENV: development
      DATABASE_DEV_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_dev_db
      DATABASE_TEST_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_test_db
      DATABASE_PROD_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_prod_db
      SQLALCHEMY_ENGINE_OPTIONS: |
        {"connect_args": {"options": "-csearch_path=stock_schema"}}
      REDIS_URL: redis://redis:6379
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms_stock.tls=true"
      - "traefik.http.routers.ms_stock.middlewares=latency-check@file"
      - "traefik.http.services.ms_stock.loadbalancer.server.port=8000"
      - "traefik.docker.network=mired"
    networks:
      - mired

  ms_pago:
    build:
      context: ../ms-pago # Ruta hacia el microservicio
    deploy:
      replicas: 2
    environment:
      FLASK_ENV: development
      DATABASE_DEV_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_dev_db
      DATABASE_TEST_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_test_db
      DATABASE_PROD_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_prod_db
      SQLALCHEMY_ENGINE_OPTIONS: |
        {"connect_args": {"options": "-csearch_path=pago_schema"}}
      REDIS_URL: redis://redis:6379
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms_pago.tls=true"
      - "traefik.http.routers.ms_pago.middlewares=latency-check@file"
      - "traefik.http.services.ms_pago.loadbalancer.server.port=8000"
      - "traefik.docker.network=mired"
    networks:
      - mired

  ms_compras:
    build:
      context: ../ms-compras # Ruta hacia el microservicio
    deploy:
      replicas: 2
    environment:
      FLASK_ENV: development
      DATABASE_DEV_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_dev_db
      DATABASE_TEST_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_test_db
      DATABASE_PROD_URL: postgresql+psycopg2://main_app_user:main_app_password@db:5432/main_app_prod_db
      SQLALCHEMY_ENGINE_OPTIONS: |
        {"connect_args": {"options": "-csearch_path=compras_schema"}}
      REDIS_URL: redis://redis:6379
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms_compras.tls=true"
      - "traefik.http.routers.ms_compras.middlewares=latency-check@file"
      - "traefik.http.services.ms_compras.loadbalancer.server.port=8000"
      - "traefik.docker.network=mired"
  
    networks:
      - mired
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: main_app_user
      POSTGRES_PASSWORD: main_app_password
      POSTGRES_DB: main_app_db
    networks:
      - mired
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql # Montar el archivo de inicializaci√≥n
  redis:
    container_name: redis
    image: redis:latest
    networks:
      - mired
volumes:
  postgres_data:


networks:
  mired:
    driver: bridge  
    external: true